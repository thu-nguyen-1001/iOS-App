{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;\f2\fnil\fcharset0 Menlo-Italic;
}
{\colortbl;\red255\green255\blue255;\red63\green80\blue98;\red255\green255\blue255;\red0\green0\blue0;
\red155\green35\blue147;\red83\green101\blue121;\red92\green38\blue153;\red50\green109\blue116;\red57\green0\blue160;
\red196\green26\blue22;\red28\green0\blue207;}
{\*\expandedcolortbl;;\csgenericrgb\c24790\c31335\c38289;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0;
\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c32401\c39745\c47507;\csgenericrgb\c35922\c14825\c60191;\csgenericrgb\c19418\c42935\c45455;\csgenericrgb\c22454\c0\c62803;
\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c11000\c0\c81000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 //: Playground - noun: a place where people can play\cf4 \
\

\f1\b \cf5 import
\f0\b0 \cf4  UIKit\
\

\f2\i \cf6 //  Casting ensures that the value is a particular type
\f0\i0 \cf4 \
\

\f1\b \cf5 var
\f0\b0 \cf4  someArray = [\cf7 AnyObject\cf4 ]() 
\f2\i \cf6 //this array could contain any type of object
\f0\i0 \cf4 \
\
\cf8 someArray\cf4 .\cf9 append\cf4 (\cf10 "CartoonSmart.com"\cf4  
\f1\b \cf5 as
\f0\b0 \cf4  \cf7 AnyObject\cf4 ) 
\f2\i \cf6 //adding a string to the array
\f0\i0 \cf4 \
\

\f2\i \cf6 //test to see if the first object in the array is actually string
\f0\i0 \cf4 \
\

\f1\b \cf5 if
\f0\b0 \cf4  
\f1\b \cf5 let
\f0\b0 \cf4  greatTutorialSite:\cf7 String\cf4  = \cf8 someArray\cf4 [\cf11 0\cf4 ] 
\f1\b \cf5 as
\f0\b0 \cf4 ? \cf7 String\cf4  \{\
    \
    
\f2\i \cf6 //Casting success, the value in the array is a string
\f0\i0 \cf4 \
    \
    \cf9 print\cf4  ( \cf10 "  \cf4 \\\cf10 (\cf4 greatTutorialSite\cf10 ) is a great video tutorial site"\cf4 )\
    \
\}\
\

\f2\i \cf6 // or
\f0\i0 \cf4 \
\

\f1\b \cf5 if
\f0\b0 \cf4  \cf8 someArray\cf4 [\cf11 0\cf4 ] 
\f1\b \cf5 is
\f0\b0 \cf4  \cf7 String\cf4  \{\
    \cf9 print\cf4  ( \cf10 "  \cf4 \\\cf10 (\cf8 someArray\cf4 [\cf11 0\cf4 ] 
\f1\b \cf5 as
\f0\b0 \cf4 ! \cf7 String\cf10 ) is a great great video tutorial site"\cf4 )\
\}\
\

\f2\i \cf6 //---------------------------------------------------------------------------------------
\f0\i0 \cf4 \

\f1\b \cf5 let
\f0\b0 \cf4  controlArray = [\cf7 UILabel\cf4 (), \cf7 UITextView\cf4 (), \cf7 UIButton\cf4 ()]\
\

\f2\i \cf6 //using the "is" Operator for checking one of all possible types for downcasting
\f0\i0 \cf4 \

\f1\b \cf5 for
\f0\b0 \cf4  item 
\f1\b \cf5 in
\f0\b0 \cf4  \cf8 controlArray\cf4  \{\
    
\f1\b \cf5 if
\f0\b0 \cf4  item 
\f1\b \cf5 is
\f0\b0 \cf4  \cf7 UILabel\cf4  \{\
        \cf9 print\cf4 (\cf10 "UILabel"\cf4 )\
    \}\
    
\f1\b \cf5 else
\f0\b0 \cf4  
\f1\b \cf5 if
\f0\b0 \cf4  item 
\f1\b \cf5 is
\f0\b0 \cf4  \cf7 UITextView\cf4  \{\
        \cf9 print\cf4 (\cf10 "UITextView"\cf4 )\
    \}\
    
\f1\b \cf5 else
\f0\b0 \cf4  
\f1\b \cf5 if
\f0\b0 \cf4  item 
\f1\b \cf5 is
\f0\b0 \cf4  \cf7 UIButton\cf4  \{\
        \cf9 print\cf4 (\cf10 "UIButton"\cf4 )\
    \}\
    
\f1\b \cf5 else
\f0\b0 \cf4  
\f1\b \cf5 if
\f0\b0 \cf4  item 
\f1\b \cf5 is
\f0\b0 \cf4  \cf7 UIDatePicker\cf4  \{\
        \cf9 print\cf4 (\cf10 "UIDatePicker"\cf4 )\
    \}\
\}\
\

\f2\i \cf6 //using the "as?" operator for checking optional type for downcasting
\f0\i0 \cf4 \
\

\f1\b \cf5 let
\f0\b0 \cf4  controlArray1 = [\cf7 UILabel\cf4 (), \cf7 UIButton\cf4 (), \cf7 UIDatePicker\cf4 ()]\
\

\f1\b \cf5 for
\f0\b0 \cf4  item 
\f1\b \cf5 in
\f0\b0 \cf4  \cf8 controlArray1\cf4  \{\
    
\f1\b \cf5 if
\f0\b0 \cf4  
\f1\b \cf5 let
\f0\b0 \cf4  someLabel = item 
\f1\b \cf5 as
\f0\b0 \cf4 ? \cf7 UILabel\cf4  \{\
        someLabel.\cf7 text\cf4  = \cf10 "Hello, class!"\cf4 \
        \cf9 print\cf4  (someLabel.\cf7 text\cf4 !)\
    \}\
    
\f1\b \cf5 else
\f0\b0 \cf4  
\f1\b \cf5 if
\f0\b0 \cf4  
\f1\b \cf5 let
\f0\b0 \cf4  someDatePicker = item 
\f1\b \cf5 as
\f0\b0 \cf4 ? \cf7 UIDatePicker\cf4  \{\
        \cf9 print\cf4  (someDatePicker.\cf7 date\cf4 )\
        \
        
\f1\b \cf5 let
\f0\b0 \cf4  dateFormatter = \cf7 DateFormatter\cf4 ()\
        dateFormatter.\cf7 dateFormat\cf4  =  \cf10 "YYYY-MM-DD HH:mm:ss"\cf4 \
        \
        
\f1\b \cf5 let
\f0\b0 \cf4  date = dateFormatter.\cf9 date\cf4 (from:\cf10 "2020-01-01 08:30:00"\cf4 )\
        \
        someDatePicker.\cf7 date\cf4  = date!\
        \cf9 print\cf4  (someDatePicker.\cf7 date\cf4 )\
    \}\
  \}\
\

\f2\i \cf6 //direct downcasting if knowing that it is possible
\f0\i0 \cf4 \

\f1\b \cf5 var
\f0\b0 \cf4  aControlThatShouldBeAButton: \cf7 UIView\cf4  = \cf7 UIButton\cf4 ()\

\f1\b \cf5 var
\f0\b0 \cf4  thatButton: \cf7 UIButton\cf4  = \cf8 aControlThatShouldBeAButton\cf4  
\f1\b \cf5 as
\f0\b0 \cf4 ! \cf7 UIButton\cf4 \
}